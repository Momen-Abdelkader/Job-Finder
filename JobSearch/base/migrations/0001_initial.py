# Generated by Django 5.2.1 on 2025-05-13 23:13

import datetime
import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_type', models.CharField(choices=[('normal', 'Normal User'), ('company', 'Company User')], default='normal', max_length=10)),
                ('profile_photo', models.ImageField(blank=True, null=True, upload_to='photos/%y/%m/%d')),
                ('phone', models.CharField(blank=True, max_length=12)),
                ('created_date', models.DateTimeField(default=datetime.datetime.now)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='AdminProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(max_length=50)),
                ('user', models.OneToOneField(limit_choices_to={'user_type': 'company'}, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Job',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('job_title', models.CharField(max_length=50)),
                ('work_type', models.CharField(blank=True, choices=[('on_site', 'On-Site'), ('remote', 'Remote'), ('hybrid', 'Hybrid')], max_length=10)),
                ('job_type', models.CharField(blank=True, choices=[('full_time', 'Full-Time'), ('part_time', 'Part-Time'), ('internship', 'Internship')], max_length=10)),
                ('exp_level', models.CharField(blank=True, choices=[('student', 'Student'), ('fresh_graduate', 'Fresh-Graduate'), ('junior', 'Junior'), ('mid_level', 'Mid-Level'), ('senior', 'Senior')], max_length=15)),
                ('salary', models.IntegerField(blank=True, null=True)),
                ('location', models.CharField(blank=True, max_length=100)),
                ('published_date', models.DateTimeField(default=datetime.datetime.now)),
                ('description', models.TextField(blank=True, max_length=1000)),
                ('publisher_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.adminprofile')),
            ],
        ),
        migrations.CreateModel(
            name='RequiredSkill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('skill', models.CharField(max_length=30)),
                ('job_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.job')),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location', models.CharField(blank=True, max_length=100, null=True)),
                ('job_title', models.CharField(blank=True, max_length=50, null=True)),
                ('resume_url', models.URLField(blank=True, null=True)),
                ('exp_level', models.CharField(blank=True, choices=[('student', 'Student'), ('fresh_graduate', 'Fresh-Graduate'), ('junior', 'Junior'), ('mid_level', 'Mid-Level'), ('senior', 'Senior')], max_length=15)),
                ('work_mode', models.CharField(blank=True, choices=[('on_site', 'On-Site'), ('remote', 'Remote'), ('hybrid', 'Hybrid')], max_length=10)),
                ('job_type', models.CharField(blank=True, choices=[('full_time', 'Full-Time'), ('part_time', 'Part-Time'), ('internship', 'Internship')], max_length=10)),
                ('apply_to', models.ManyToManyField(blank=True, to='base.job')),
                ('user_id', models.OneToOneField(limit_choices_to={'user_type': 'normal'}, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserInterest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('interest', models.CharField(max_length=30)),
                ('user_id', models.ForeignKey(limit_choices_to={'user_type': 'normal'}, on_delete=django.db.models.deletion.CASCADE, to='base.userprofile')),
            ],
        ),
        migrations.CreateModel(
            name='UserSkill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('skill', models.CharField(max_length=30)),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.userprofile')),
            ],
        ),
    ]
